-- ENUMS
CREATE TYPE status AS ENUM ('Open', 'In Progress', 'Review', 'Closed');
CREATE TYPE priority AS ENUM ('Low', 'Medium', 'High', 'Critical');
CREATE TYPE role AS ENUM ('Admin', 'Contributor', 'Viewer');
CREATE TYPE notification_type AS ENUM ('Mention', 'Issue_assigned', 'Issue_updated', 'Project_invite');
CREATE TYPE auth_provider AS ENUM ('LOCAL', 'GOOGLE', 'GITHUB'); -- add more as needed

-- USERS
CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(100) NOT NULL,
    email VARCHAR(150) UNIQUE NOT NULL,
    auth_provider auth_provider NOT NULL DEFAULT 'LOCAL',
    avatar_url TEXT
);

-- PROJECTS
CREATE TABLE projects (
    id SERIAL PRIMARY KEY,
    name VARCHAR(200) NOT NULL,
    description TEXT,
    created_by INTEGER REFERENCES users(id) ON DELETE SET NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- PROJECT MEMBERSHIP (Many-to-Many with Role & Join Date)
CREATE TABLE project_members (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    project_id INTEGER REFERENCES projects(id) ON DELETE CASCADE,
    role role NOT NULL,
    joined_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(user_id, project_id)
);

-- ISSUES
CREATE TABLE issues (
    id SERIAL PRIMARY KEY,
    title VARCHAR(200) NOT NULL,
    description TEXT,
    status status DEFAULT 'Open',
    priority priority DEFAULT 'Medium',
    project_id INTEGER REFERENCES projects(id) ON DELETE CASCADE,
    created_by INTEGER REFERENCES users(id) ON DELETE SET NULL,
    assigned_to INTEGER REFERENCES users(id) ON DELETE SET NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- MESSAGES (Related to an Issue)
CREATE TABLE messages (
    id SERIAL PRIMARY KEY,
    content TEXT NOT NULL,
    language VARCHAR(50),
    sender_id INTEGER REFERENCES users(id) ON DELETE SET NULL,
    issue_id INTEGER REFERENCES issues(id) ON DELETE CASCADE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- NOTIFICATIONS
CREATE TABLE notifications (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    type notification_type,
    message TEXT NOT NULL,
    is_read BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- INDEXES FOR PERFORMANCE
CREATE INDEX idx_issues_project ON issues(project_id);
CREATE INDEX idx_messages_issue ON messages(issue_id);
CREATE INDEX idx_notifications_user ON notifications(user_id);
